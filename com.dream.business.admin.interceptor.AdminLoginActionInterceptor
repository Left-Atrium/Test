package com.dream.business.admin.interceptor;

import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts2.ServletActionContext;

import com.dream.business.admin.web.model.dto.UapUserDTO;
import com.dream.framework.business.core.Constant;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;
public class AdminLoginActionInterceptor extends MethodFilterInterceptor{
	protected final Log logger = LogFactory.getLog("AdminLoginActionInterceptor");
	private static final long serialVersionUID = 1L;
	@Override
	protected String doIntercept(ActionInvocation arg0) throws Exception {
		Object user = (Object) arg0.getInvocationContext().getSession()
				.get(Constant.Dream_Admin_Session);
		
		String url = arg0.getProxy().getNamespace() + "/"
				+ arg0.getProxy().getActionName() + "/"
				+ arg0.getProxy().getMethod() + ".action";
		// 设置用户当前访问的界面,方便用户登录后直接跳转到前一个页面
		HttpServletRequest request = ServletActionContext.getRequest();
		// 访问服务器所带有的参数信息
		Map<String, Object> parameters = arg0.getInvocationContext()
				.getParameters();
		Set<String> keys = parameters.keySet();
		String para_URL = url + "?";
		for (String key : keys) {
			String[] params = (String[]) parameters.get(key);
			para_URL += "&" + params[0];
		}
		logger.info("URL["+para_URL+"]");
		if (user == null||!(user instanceof UapUserDTO)) {
			logger.error("【非法外部访问...AdminServer】无效-Session 信息");
			return "login";
		}
		request.getSession().setAttribute("para_URL", para_URL);
		return arg0.invoke();
	}
}
